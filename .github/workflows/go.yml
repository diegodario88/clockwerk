name: Go

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*"
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref_type == 'branch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-and-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build binary
        run: |
          go build -ldflags="-s -w" -o clockwerk .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./clockwerk
          asset_name: clockwerk-linux-amd64
          asset_content_type: application/octet-stream
